[tool.poetry]
name = "mercury"
version = "1.1.2" # x-release-please-version
description = "Mercury composition calculator REST API"
authors = ["Your Name <you@example.com>"]
license = "MIT"

[tool.poetry.dependencies]
cachetools = "^5.3.3"
python = "^3.10.4"
numpy = "^1.26.2"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
gunicorn = "^21.2.0"
requests = "^2.32.3"
opencensus-ext-azure = "^1.1.9"
urllib3 = "^2.2.1"
pydantic = "^1.10.15"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
pytest = "^7.3.1"
httpx = "^0.27.0"


[tool.ruff]
src = ["src"]
target-version = "py310"
line-length = 120  # This is the prefered line-length. ruff will _try_ to make this

lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "S",  # Bandit
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # automatically upgrade syntax for newer versions of the language
    "RUF", # ruff specific rules
]

lint.ignore = [
    "W191", # conflict with ruff formatter
    "B008",  # do not perform function calls in argument defaults
    "E501",  # line too long (ruff formater is doing the best it can. Fix them yourself if you dont like the line length)
    "C901",  # Code complexity
    "RUF012", # Pydantic class variables
    "S101",  # Use of "assert"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
namespace_packages = true
